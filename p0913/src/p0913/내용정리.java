package p0913;

import java.util.Calendar;

public class 내용정리 {

	public static void main(String[] args) {
		/*
		 * 
★		 * 제어자 → 
★		 * 접근 제어자 : public , protected,default,private  
		 * public : 모든 패키지에서 사용 가능 (같은클래스,같은패키지,자손클래스,전체 접근가능) 
		 * protected : 같은 패키지 내에서만 사용가능 /다른 클래스에서는 사용 불가(같은클래스,같은패키지,자손클래스 접근가능)
		 * default : 같은 패키지 내에서만 사용 가능(같은클래스,같은패키지 접근가능)
		 * private: 자손클래스에서 접근 가능(같은클래스만 접근가능)
		 * 
		 * 
		 * 
★		 * 제어자 → 
		 * 그외 제어자 : 
		 * static(멤버변수 , 매서드 , 초기화 블럭) 
		 * final(클래스,매서드,멤버변수,지역변수)
		 * abstract(클래스,매서드) //추상 →객체선언 할수 없음
		 * 
		 * ★singleton 패턴 : 시간등 같은곳에 존재하면서 답이 같은거.
		 * 
		 * Calendar cal = Calendar.getInstance();  <<시간을 나타내는 코드 ==Date와 같음
		 * 
★		 * ★다형성 polymorphism :여러 가지 형태를 가질 수 있는 능력
		 *          하나의 참조변수로 여러 타입의 객체를 참조할 수 있는 것 //조상타입의 참조 변수로 자손타입의 객체를 다룰 수 있는 것이 다형성
		 *   중요:  조상타입의 참조 변수로 자손타입의 객체를 다룰 수 있는 것이 다형성
		 *          "extends" → 상속받겠다는 코드
		 *          
		 *매개변수의 다형성 : 참조형 매개변수는 매서드 호출시 , 
		 *                   자신과 같은 타입 또는 자손타입의 인스턴스를 넘겨줄 수 있다
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		 */

	}

}
