package p0921;

public class 내용정리 {
	/* 제어자 → 
	★		 * 접근 제어자 : public , protected,default,private  
			 * public : 모든 패키지에서 사용 가능 (같은클래스,같은패키지,자손클래스,전체 접근가능) 
			 * protected : 같은 패키지 내에서만 사용가능 /다른 클래스에서는 사용 (같은클래스,같은패키지,자손클래스 접근가능)
			 * default : 같은 패키지 내에서만 사용 가능(같은클래스,같은패키지 접근가능)
			 * private: 자손클래스에서 접근 가능(같은클래스만 접근가능)
			 * 
			 * 
			 * 
	★		 * 제어자 → 
			 * 그외 제어자 : 
			 * static(멤버변수 , 매서드 , 초기화 블럭) 
			 * final(클래스,매서드,멤버변수,지역변수) 상수가 됨(값이 변경이 안됨.)
			 * 클래스 앞에 final 붙으면 상속불가 
			 * 
			 * abstract(클래스,매서드) //추상 →객체선언 할수 없음
			 * 
			 * ★singleton 패턴 : 시간등 같은곳에 존재하면서 답이 같은거.
			 * 
			 * Calendar cal = Calendar.getInstance();  <<시간을 나타내는 코드 ==Date와 같음
			 * 
	★		 * ★다형성 polymorphism :여러 가지 형태를 가질 수 있는 능력
			 *          하나의 참조변수로 여러 타입의 객체를 참조할 수 있는 것 
			 *   중요:  조상타입의 참조 변수로 자손타입의 객체를 다룰 수 있는 것이 다형성
			 *          "extends" → 상속받겠다는 코드
			 *          
			 *매개변수의 다형성 : 참조형 매개변수는 매서드 호출시 , 
			 *                   자신과 같은 타입 또는 자손타입의 인스턴스를 넘겨줄 수 있다
			 * 
   09월14일  * 변수에는 3가지 (클래스변수 , 인스턴스변수 , 지역변수)
			 *생성자 : 초기화 메서드→ 기본생성자는 "꼭" 만들기
			 *상속 : extends 클래스를 재사용 하는것
			 *
			 * super : 조상생성자를 호출하는 
			 * 생성자란 : 객체 생성때 초기화 메소드 -> 데이터 입력
			 * -> 데이터를 한번에 넣을거야 ? 한꺼번에 넣을거야 ? 하는 형태
			 * this() : 다른 생성자 호출 / this 인스턴스 변수 호출
			 * 
			 * 컬렉션 프레임워크 : 여러 객체(데이터)를 모아 놓는 것을 의미한다.
			 * 예) ArrayList : 배열지정은 정해진 값만 넣을수 있지만 
			 *     ArrayList(컬렉션 프레임워크)는 정해진 공간보다 더 넓게,더 좁게 사용가능
			 *     
   09월 15일 * = 모든 타입이 들어올수 없도록 설정해주는 것 : 제너릭
   
   09월 18일 * 추상클래스 : "미완성 설계도" : 추상메서드를 포함하고 있으면 추상클래스
             * 인터페이스 : 모든게 추상클래스를 가지고 있어야 한다.( abstract )
             * 인터페이스 : 추상메서드와 상수만을 멤버로 가질 수 있다.
             * 인터페이스 : 상속받을라면 "implements"
             * 
   09월 19일  * Exception : 예외처리 최고 조상
			 * 입출력 : I/O input,output stream : 문자나 파일을 읽고 쓰기가 가능하다.
			 * 입출력 : 추상클래스로 만들어 진다.
			 * reader , Writer : 문자만 읽고 문자를 쓰는 기능
			 * output stream : 저장하는 것 (프로그램을 하드디스크에 저장)
			 * intput stream: 읽어들이는 것 (하드디스크 정보를 프로그램으로 읽어들이는 것)
			 * 
    9월21일  * 컬렉션 프레임웍의 핵심 인터페이스 : List , Set , Map
			 * List : 순서 ,중복 가능 
			 * Set : 순서 , 중복 불가능 S
			 * Map : 키와 값의 쌍으로 이루어진 데이터의 집합 키는 중복불가 값은 
			 *       중복가능 (예,지역번호 전화번호 우편번호 등)
			 * String 타입의 등가비교는 equals 사용하기 !
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 *
			 * 
			 * 
			 */
}

}
